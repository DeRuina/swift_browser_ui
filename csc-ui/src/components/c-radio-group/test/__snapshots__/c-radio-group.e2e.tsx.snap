// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`c-radio-group renders correctly 1`] = `
CDPPage {
  "_e2eClose": [Function],
  "_e2eElements": Array [
    <c-radio-group class="hydrated">
  <mock:shadow-root>
    <div aria-labelledby="c-radio-group__label" class="c-radio-group" role="radiogroup">
      <div class="c-radio-group__items">
        <label class="c-radio" id="one">
          <input aria-checked="false" aria-disabled="false" aria-labelledby="one" name="1" type="radio">
          <span class="ripple">
            <span class="selection"></span>
          </span>
          <div class="c-radio__label">
            Radio 1
          </div>
        </label>
        <label class="c-radio" id="two">
          <input aria-checked="false" aria-disabled="false" aria-labelledby="two" name="1" type="radio">
          <span class="ripple">
            <span class="selection"></span>
          </span>
          <div class="c-radio__label">
            Radio 2
          </div>
        </label>
        <label class="c-radio" id="three">
          <input aria-checked="false" aria-disabled="false" aria-labelledby="three" name="1" type="radio">
          <span class="ripple">
            <span class="selection"></span>
          </span>
          <div class="c-radio__label">
            Radio 3
          </div>
        </label>
      </div>
      <div class="active c-radio__details">
        <div class="c-radio__message c-radio__message--hint">
          <span></span>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</c-radio-group>,
  ],
  "_e2eEventIds": 0,
  "_e2eEvents": Map {},
  "_e2eGoto": [Function],
  "close": [Function],
  "compareScreenshot": [Function],
  "debugger": [Function],
  "emitter": Object {
    "all": Map {
      "console" => Array [
        [Function],
      ],
      "pageerror" => Array [
        [Function],
      ],
      "requestfailed" => Array [
        [Function],
      ],
      "request" => Array [
        [Function],
      ],
    },
    "emit": [Function],
    "off": [Function],
    "on": [Function],
  },
  "eventsMap": Map {
    "console" => Array [
      [Function],
    ],
    "pageerror" => Array [
      [Function],
    ],
    "requestfailed" => Array [
      [Function],
    ],
    "request" => Array [
      [Function],
    ],
  },
  "find": [Function],
  "findAll": [Function],
  "getDiagnostics": [Function],
  "spyOnEvent": [Function],
  "waitForChanges": [Function],
  "waitForEvent": [Function],
}
`;
