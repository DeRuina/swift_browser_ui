{"version":3,"names":["cCheckboxCss","CCheckbox","this","_validationIcon","h","height","width","viewBox","d","mdiCloseCircle","show","type","content","onValidationMessageChange","message","onValidChange","length","valid","_handleValidation","handleKeyDown","event","includes","code","preventDefault","toggleState","componentWillLoad","value","console","warn","componentDidLoad","_handleMessageOptions","requestAnimationFrame","messageOptions","Object","assign","hint","validation","timeout","setTimeout","disabled","createRipple","_container","changeValue","emit","_renderMessages","hideDetails","classes","active","messageClasses","class","render","wrapperClasses","labelClasses","indeterminate","Host","id","toString","checked","onChange","htmlFor","ref","el","label","required","cPaginationCss","CPagination","_textContent","itemsPerPageText","nextPage","prevPage","_buttons","_increasePageNumber","_currentPage","_getTotalPages","_valueChangeHandler","_decreasePageNumber","itemCount","valueHandler","oldValue","_isEqual","_setRange","options1","options2","keys1","keys","keys2","key","_getText","source","_a","textOverrides","currentPage","_itemsPerPage","itemsPerPage","_totalVisible","totalVisible","startFrom","endTo","_getItemsPerPage","itemsPerPageOptions","map","i","name","action","onMenuClick","stopPropagation","items","nohover","onClick","Math","ceil","_setPage","number","_getRange","hideRange","end","min","start","pageTextOverride","pageText","parsedPageTextOverride","count","_getArrowLeft","size","text","mdiChevronLeft","_getArrowRight","mdiChevronRight","_button","params","pageOfTextOverride","pageOfText","parsedPageOfTextOverride","pageNumber","_addButton","push","_addSeparator","tabindex","role","mdiDotsHorizontal","_addButtons","buttonStart","buttonCount","index","allPagesVisible","_getPageButtons","morePagesThanVisible","_renderButtons","buttonsize","simple","range"],"sources":["src/components/c-checkbox/c-checkbox.scss?tag=c-checkbox&encapsulation=shadow","src/components/c-checkbox/c-checkbox.tsx","src/components/c-pagination/c-pagination.scss?tag=c-pagination&encapsulation=shadow","src/components/c-pagination/c-pagination.tsx"],"sourcesContent":[".c-checkbox {\n  $this: &;\n\n  --c-checkbox-color: var(--csc-primary);\n\n  position: relative;\n  width: fit-content;\n\n  &__details {\n    line-height: 1;\n    padding: 0 12px;\n\n    &.active {\n      #{$this} {\n        &__message {\n          opacity: 1;\n          transform: translateY(0px);\n        }\n      }\n    }\n  }\n\n  &__message {\n    font-size: 12px;\n    opacity: 0;\n    transform: translateY(-4px);\n    transition: all 0.2s cubic-bezier(0.25, 0.8, 0.5, 1);\n\n    &--hint {\n      color: var(--csc-mid-grey);\n    }\n\n    &--error {\n      color: var(--csc-error);\n    }\n\n    span {\n      align-items: flex-start;\n      color: currentColor;\n      display: flex;\n      gap: 4px;\n      height: 16px;\n    }\n\n    svg {\n      fill: currentColor;\n      min-height: 16px;\n      min-width: 16px;\n      position: relative;\n      top: -2px;\n    }\n  }\n\n  &__label-content {\n    padding-top: 10px;\n    text-align: left;\n    user-select: none;\n\n    span.required {\n      color: var(--csc-error);\n    }\n  }\n\n  &--disabled {\n    --c-checkbox-color: var(--csc-mid-grey);\n    --csc-error: var(--c-checkbox-color);\n\n    color: var(--c-checkbox-color);\n    opacity: 0.75;\n\n    .c-checkbox__label {\n      cursor: default;\n    }\n  }\n\n  &--error {\n    --c-checkbox-color: var(--csc-error);\n\n    color: var(--csc-error);\n  }\n\n  input:focus {\n    outline: none;\n  }\n\n  input:focus + .c-checkbox__label .ripple {\n    outline: 2px var(--c-checkbox-color) solid;\n  }\n\n  @supports selector(:focus-visible) {\n    input:focus + .c-checkbox__label .ripple {\n      outline: none;\n    }\n  }\n\n  input:focus-visible + .c-checkbox__label .ripple {\n    outline: 2px var(--c-checkbox-color) solid;\n  }\n\n  &:not(.c-checkbox--disabled) {\n    .ripple:hover {\n      background-color: var(--csc-primary-text-hover);\n    }\n  }\n\n  .visuallyhidden {\n    border: 0;\n    clip: rect(1px, 1px, 1px, 1px);\n    height: 1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n  }\n}\n\n.c-checkbox input:checked + .c-checkbox__label {\n  &:before {\n    background: var(--c-checkbox-color);\n    border-color: var(--c-checkbox-color);\n  }\n\n  .path {\n    stroke: #fff;\n    fill: #fff;\n    stroke-dashoffset: 0;\n    stroke-width: 13;\n    stroke-linecap: round;\n    stroke-linejoin: round;\n    stroke-miterlimit: 10;\n  }\n}\n\n.c-checkbox__label {\n  cursor: pointer;\n  display: flex;\n  gap: 4px;\n  position: relative;\n  user-select: none;\n\n  &:before {\n    border-radius: 2px;\n    border: 2px solid var(--c-checkbox-color);\n    content: '';\n    display: inline-block;\n    height: 18px;\n    left: 12px;\n    position: absolute;\n    top: 12px;\n    transition: all 0.25s ease-out;\n    vertical-align: middle;\n    width: 18px;\n  }\n\n  svg {\n    height: 14px;\n    left: 14px;\n    position: absolute;\n    top: 14px;\n    width: 14px;\n  }\n\n  &--indeterminate .path {\n    stroke-dasharray: 0 !important;\n    stroke-dashoffset: 0 !important;\n    stroke: transparent;\n  }\n\n  .ripple {\n    border-radius: 50%;\n    color: var(--c-checkbox-color);\n    display: grid;\n    height: 42px;\n    min-width: 42px;\n    overflow: hidden;\n    place-content: center;\n    position: relative;\n    transform: translateZ(0);\n    width: 42px;\n  }\n}\n","import {\n  Component,\n  Host,\n  h,\n  Listen,\n  Prop,\n  Event,\n  EventEmitter,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { mdiCloseCircle } from '@mdi/js';\nimport { createRipple } from '../../utils/utils';\n/**\n * @group Form\n * @slot - Default slot for the label\n */\n@Component({\n  tag: 'c-checkbox',\n  styleUrl: 'c-checkbox.scss',\n  shadow: true,\n})\nexport class CCheckbox {\n  /**\n   * Disable the checkbox\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Indeterminate state\n   */\n  @Prop() indeterminate = false;\n\n  /**\n   * Element label\n   */\n  @Prop() label = '';\n\n  /**\n   * Set as required\n   */\n  @Prop() required = false;\n\n  /**\n   * Set the validity of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Is the element checked\n   */\n  @Prop({ mutable: true }) value = false;\n\n  /**\n   * Triggered when element is checked or unchecked\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  @State() messageOptions = {\n    show: false,\n    type: 'hint',\n    content: '',\n  };\n\n  private _container: HTMLDivElement;\n\n  private _validationIcon = (\n    <svg height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\n      <path d={mdiCloseCircle} />\n    </svg>\n  );\n\n  @Watch('validation')\n  onValidationMessageChange(message: string) {\n    this.onValidChange(message.length === 0);\n  }\n\n  @Watch('valid')\n  onValidChange(valid: boolean) {\n    this._handleValidation(valid || this.valid);\n  }\n\n  @Listen('keydown', { passive: true })\n  handleKeyDown(event: KeyboardEvent) {\n    if (['Space'].includes(event.code)) {\n      event.preventDefault();\n      this.toggleState(event);\n    }\n  }\n\n  componentWillLoad() {\n    if (typeof this.value !== 'boolean') {\n      console.warn(`[C-CHECKBOX] Property 'value' should be a boolean.`);\n    }\n  }\n\n  componentDidLoad() {\n    this._handleMessageOptions(this.valid);\n  }\n\n  private _handleMessageOptions(valid: boolean) {\n    requestAnimationFrame(() => {\n      this.messageOptions = {\n        ...this.messageOptions,\n        type: valid ? 'hint' : 'error',\n        show: true,\n        content: valid ? (\n          <span>{this.hint}</span>\n        ) : (\n          <span>\n            {this._validationIcon} {this.validation}\n          </span>\n        ),\n      };\n    });\n  }\n\n  private _handleValidation(valid: boolean, timeout = 200) {\n    setTimeout(() => {\n      this._handleMessageOptions(valid);\n    }, timeout);\n  }\n\n  private toggleState(event) {\n    if (this.disabled) return;\n\n    createRipple(event, this._container, true);\n\n    this.value = !this.value;\n    this.changeValue.emit(this.value);\n  }\n\n  private _renderMessages() {\n    if (this.hideDetails) return;\n\n    const classes = {\n      'c-checkbox__details': true,\n      active: this.messageOptions.show,\n    };\n\n    const messageClasses = {\n      'c-checkbox__message': true,\n      [`c-checkbox__message--${this.messageOptions.type}`]: true,\n    };\n\n    return (\n      <div class={classes}>\n        <div class={messageClasses}>{this.messageOptions.content}</div>\n      </div>\n    );\n  }\n\n  render() {\n    const wrapperClasses = {\n      'c-checkbox': true,\n      'c-checkbox--disabled': this.disabled,\n      'c-checkbox--error': this.messageOptions.type === 'error',\n    };\n\n    const labelClasses = {\n      'c-checkbox__label': true,\n      'c-checkbox__label--indeterminate': this.indeterminate,\n    };\n\n    return (\n      <Host>\n        <div class={wrapperClasses}>\n          <input\n            class=\"visuallyhidden\"\n            id=\"checkbox\"\n            type=\"checkbox\"\n            aria-checked={(!!this.value).toString()}\n            aria-disabled={this.disabled.toString()}\n            checked={this.value}\n            disabled={this.disabled}\n            onChange={(event) => this.toggleState(event)}\n          />\n\n          <label class={labelClasses} htmlFor=\"checkbox\">\n            <div\n              class=\"ripple\"\n              ref={(el) => (this._container = el as HTMLDivElement)}\n            >\n              <svg viewBox=\"0 0 100 100\">\n                {!this.indeterminate && !!this.value && (\n                  <path\n                    class=\"path\"\n                    d=\"M 12 52 l 24 24 l 47 -47 l -3 -3 l -44 44 l -21 -21 l -3 3\"\n                  />\n                )}\n                {this.indeterminate && (\n                  <path class=\"path\" d=\"M20 56 h60 v-8 h-60 z\" />\n                )}\n              </svg>\n            </div>\n\n            <div class=\"c-checkbox__label-content\">\n              {!!this.label ? this.label : <slot></slot>}\n              {this.required && <span class=\"required\">&nbsp;*</span>}\n            </div>\n          </label>\n        </div>\n\n        {this._renderMessages()}\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n}\n\nspan {\n  font-size: 14px;\n  text-align: right;\n  white-space: nowrap;\n}\n\n.range {\n  min-width: 132px;\n}\n\n.visuallyhidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n\n.c-pagination {\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0 24px;\n  justify-content: center;\n\n  ul {\n    align-items: center;\n    display: flex;\n    gap: 4px;\n    justify-content: center;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  &--simple {\n    ul {\n      flex: 1;\n      justify-content: flex-end;\n    }\n  }\n\n  &--small {\n    ul {\n      gap: 2px;\n    }\n  }\n\n  &__details {\n    align-items: center;\n    display: flex;\n    flex-wrap: wrap;\n    flex: auto;\n    justify-content: space-between;\n  }\n}\n","import {\n  Component,\n  h,\n  Prop,\n  Event,\n  EventEmitter,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { mdiChevronLeft, mdiChevronRight, mdiDotsHorizontal } from '@mdi/js';\nimport { CMenuOption, CPaginationOptions } from '../../types';\n\n/**\n * @group Navigation\n */\n\n@Component({\n  tag: 'c-pagination',\n  styleUrl: 'c-pagination.scss',\n  shadow: true,\n})\nexport class CPagination {\n  /**\n   * Object containing values that are needed for pagination.\n   *\n   * Note! startFrom and endTo are assigned automatically to the object based on other values\n   */\n  @Prop() value: CPaginationOptions = {\n    itemCount: 0,\n  };\n\n  /**\n   * Hide details (per page dropdown and the 'x - y of n pages' text)\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hide page number buttons\n   */\n  @Prop() simple = false;\n\n  /**\n   * Hide details (per page dropdown and the 'x - y of n pages' text)\n   */\n  @Prop() size: 'default' | 'small' = 'default';\n\n  @State() private _currentPage;\n\n  @State() private _itemsPerPage;\n\n  @State() private _totalVisible;\n\n  /**\n   * Triggered when values are changed\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter<CPaginationOptions>;\n\n  /**\n   * Hide range indicator\n   */\n  @Prop() hideRange = false;\n\n  /**\n   * Items per page options\n   */\n  @Prop() itemsPerPageOptions: number[] = [5, 25, 50, 100];\n\n  @State() tick = '';\n\n  @Watch('value')\n  valueHandler(value: CPaginationOptions, oldValue: CPaginationOptions) {\n    if (this._isEqual(value, oldValue)) return;\n\n    this._setRange();\n  }\n\n  private _isEqual(options1: CPaginationOptions, options2: CPaginationOptions) {\n    const keys1 = Object.keys(options1 || {});\n    const keys2 = Object.keys(options2 || {});\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    for (const key of keys1) {\n      if (options1[key] !== options2[key]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  componentWillLoad() {\n    this._setRange();\n  }\n\n  private _textContent = {\n    itemsPerPageText: 'Items per page:',\n    nextPage: 'Next page',\n    prevPage: 'Previous page',\n  };\n\n  private _getText(key: string) {\n    const source = this.value.textOverrides?.[key]\n      ? this.value.textOverrides\n      : this._textContent;\n\n    return source[key];\n  }\n\n  private _setRange() {\n    this._currentPage = this.value.currentPage || 1;\n    this._itemsPerPage = this.value.itemsPerPage || 25;\n    this._totalVisible = this.value.totalVisible || 7;\n    this.value.startFrom =\n      this._currentPage * this._itemsPerPage - this._itemsPerPage;\n    this.value.endTo = this._currentPage * this._itemsPerPage - 1;\n    this.changeValue.emit(this.value);\n  }\n\n  private _buttons: HTMLLIElement[] = [];\n\n  private _valueChangeHandler() {\n    this.value.currentPage = this._currentPage;\n    this.value.itemsPerPage = this._itemsPerPage;\n    this._setRange();\n  }\n\n  private _getItemsPerPage() {\n    const itemsPerPageOptions: CMenuOption[] = this.itemsPerPageOptions.map(\n      (i) => ({\n        name: i.toString(),\n        action: () => {\n          this._itemsPerPage = i;\n          this._currentPage = 1;\n          this._valueChangeHandler();\n        },\n      }),\n    );\n\n    const onMenuClick = (event) => {\n      event.stopPropagation();\n    };\n\n    return (\n      <c-menu items={itemsPerPageOptions} nohover onClick={onMenuClick}>\n        <div>\n          <span class=\"items-per-page\">\n            {this._getText('itemsPerPageText')} {this._itemsPerPage}\n          </span>\n        </div>\n      </c-menu>\n    );\n  }\n\n  private _getTotalPages() {\n    return Math.ceil(this.value.itemCount / this._itemsPerPage);\n  }\n\n  private _increasePageNumber = () => {\n    if (this._currentPage < this._getTotalPages()) {\n      this._currentPage += 1;\n      this._valueChangeHandler();\n    }\n  };\n\n  private _decreasePageNumber = () => {\n    if (this._currentPage > 1) {\n      this._currentPage -= 1;\n      this._valueChangeHandler();\n    }\n  };\n\n  private _setPage(number) {\n    this._currentPage = number;\n    this._valueChangeHandler();\n  }\n\n  private _getRange() {\n    if (this.hideRange || !this.value.itemCount) return;\n\n    const end = Math.min(\n      this._currentPage * this._itemsPerPage,\n      this.value.itemCount,\n    );\n    const start = this.value.startFrom + 1;\n\n    const pageTextOverride = this.value.textOverrides?.pageText;\n\n    let parsedPageTextOverride;\n\n    if (pageTextOverride) {\n      parsedPageTextOverride = pageTextOverride({\n        start: start,\n        end: end,\n        count: this.value.itemCount,\n      });\n    }\n\n    return pageTextOverride\n      ? parsedPageTextOverride\n      : `${start} - ${end} of ${this.value.itemCount} items`;\n  }\n\n  private _getArrowLeft(size) {\n    return (\n      <li>\n        <c-icon-button\n          aria-disabled={this.value.currentPage <= 1 ? 'true' : 'false'}\n          aria-label={`${this._getText('prevPage')}`}\n          disabled={this.value.currentPage <= 1}\n          size={size}\n          text\n          onClick={this._decreasePageNumber}\n        >\n          <span class=\"visuallyhidden\">{this._getText('prevPage')}</span>\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path d={mdiChevronLeft} />\n          </svg>\n        </c-icon-button>\n      </li>\n    );\n  }\n\n  private _getArrowRight(size) {\n    return (\n      <li>\n        <c-icon-button\n          aria-disabled={\n            this.value.currentPage >= this._getTotalPages() ? 'true' : 'false'\n          }\n          aria-label={`${this._getText('nextPage')}`}\n          disabled={this.value.currentPage >= this._getTotalPages()}\n          size={size}\n          text\n          onClick={this._increasePageNumber}\n        >\n          <span class=\"visuallyhidden\">{this._getText('nextPage')}</span>\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path d={mdiChevronRight} />\n          </svg>\n        </c-icon-button>\n      </li>\n    );\n  }\n\n  private _button(number, size) {\n    const params = {\n      text: this._currentPage !== number,\n      onClick: () => this._setPage(number),\n      size,\n    };\n\n    if (this._currentPage === number) {\n      params['aria-current'] = 'page';\n    }\n\n    const pageOfTextOverride = this.value.textOverrides?.pageOfText;\n\n    let parsedPageOfTextOverride;\n\n    if (pageOfTextOverride) {\n      parsedPageOfTextOverride = pageOfTextOverride({\n        pageNumber: number,\n        count: this._getTotalPages(),\n      });\n    }\n\n    return (\n      <li>\n        <c-icon-button {...params}>\n          <span\n            aria-label={\n              pageOfTextOverride\n                ? parsedPageOfTextOverride\n                : `page ${number} of ${this._getTotalPages()}`\n            }\n          >\n            {number}\n          </span>\n        </c-icon-button>\n      </li>\n    );\n  }\n\n  private _addButton(number, size) {\n    this._buttons.push(this._button(number, size));\n  }\n\n  private _addSeparator(size) {\n    this._buttons.push(\n      <li>\n        <c-icon-button\n          aria-disabled=\"true\"\n          size={size}\n          tabindex=\"-1\"\n          role=\"separator\"\n          disabled\n          text\n        >\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n            <path d={mdiDotsHorizontal} />\n          </svg>\n        </c-icon-button>\n      </li>,\n    );\n  }\n\n  private _addButtons(buttonStart, buttonCount, size) {\n    if (buttonStart > 1) {\n      this._addButton(1, size);\n      this._addSeparator(size);\n    }\n\n    for (let index = 1; index < buttonCount; index++) {\n      this._addButton(buttonStart + index, size);\n    }\n\n    const allPagesVisible = this._getTotalPages() <= this._totalVisible;\n\n    if (\n      (this._currentPage < this._totalVisible - 1 ||\n        this._currentPage < this._getTotalPages() - this._totalVisible + 4) &&\n      !allPagesVisible\n    ) {\n      this._addSeparator(size);\n    }\n  }\n\n  private _getPageButtons(size) {\n    this._buttons = [];\n    let buttonStart = 0;\n    let buttonCount = this._getTotalPages() + 1;\n    const morePagesThanVisible = this._getTotalPages() > this._totalVisible;\n\n    if (morePagesThanVisible) {\n      if (this._currentPage < this._totalVisible - 2) {\n        buttonCount = this._totalVisible - 1;\n      } else if (\n        this._currentPage <\n        this._getTotalPages() - this._totalVisible + 4\n      ) {\n        buttonStart = Math.ceil(this._currentPage - this._totalVisible / 2) + 1;\n        buttonCount = this._totalVisible - 3;\n      } else {\n        buttonStart = this._getTotalPages() - this._totalVisible + 2;\n        buttonCount = this._totalVisible - 2;\n      }\n    }\n\n    this._addButtons(buttonStart, buttonCount, size);\n\n    if (morePagesThanVisible) {\n      this._buttons.push(this._button(this._getTotalPages(), size));\n    }\n\n    return this._buttons;\n  }\n\n  private _renderButtons() {\n    if (!this.value.itemCount) return '';\n\n    const buttonsize = this.size === 'small' ? 'x-small' : 'small';\n\n    return (\n      <ul>\n        {this._getArrowLeft(buttonsize)}\n        {!this.simple && this._getPageButtons(buttonsize)}\n        {this._getArrowRight(buttonsize)}\n      </ul>\n    );\n  }\n\n  render() {\n    const classes = {\n      'c-pagination': true,\n      'c-pagination--small': this.size === 'small',\n      'c-pagination--simple': this.simple,\n    };\n\n    return (\n      <nav class={classes} role=\"navigation\" aria-label=\"pagination\">\n        {!this.hideDetails && (\n          <div class=\"c-pagination__details\">\n            {this._getItemsPerPage()}\n\n            <span class={{ range: !this.simple }}>{this._getRange()}</span>\n          </div>\n        )}\n\n        {this._renderButtons()}\n      </nav>\n    );\n  }\n}\n"],"mappings":"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"}
