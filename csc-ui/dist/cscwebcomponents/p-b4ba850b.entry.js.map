{"version":3,"names":["cInputCss","CInput","this","_hasBlurred","_debounce","_observer","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","_calculateElementWidths","unobserve","target","threshold","_onBlur","setTimeout","isFocused","_onReset","_onFocus","click","disabled","_a","inputField","focus","_b","placeholder","value","onValidChange","validateOnBlur","_setAriaDescriptionId","onValidationMessageChange","_updateStatusText","onValueChange","onPlaceholderChange","componentDidLoad","autofocus","label","observe","_labelRef","addEventListener","_c","_preventNonNumericalInput","title","_d","disconnectedCallback","removeEventListener","disconnect","isActive","removeAttribute","type","valid","hint","setAttribute","inputId","labelWidth","scrollWidth","preSlotWidth","offsetLeft","event","key","match","preventDefault","_renderBorders","shadow","classes","active","h","class","style","_renderLabel","htmlFor","ref","el","required","hiddenEl","querySelector","clearTimeout","window","statusText","validation","render","containerClasses","rows","variant","Host","id","onClick","name","hideDetails","cMessageCss","CMessage","_validationIcon","height","width","viewBox","d","mdiCloseCircle","show","content","_handleValidation","message","messageOptions","Object","assign","onHintMessageChange","timeout","messageClasses"],"sources":["src/components/c-input/c-input.scss?tag=c-input","src/components/c-input/c-input.tsx","src/components/c-message/c-message.scss?tag=c-message&encapsulation=shadow","src/components/c-message/c-message.tsx"],"sourcesContent":[":host {\n  display: block;\n  cursor: text;\n}\n\n:host([disabled]) {\n  ::slotted(input),\n  ::slotted(textarea) {\n    color: rgba(0, 0, 0, 0.5);\n  }\n}\n\n.visuallyhidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n}\n\n.c-input {\n  --c-color: rgba(0, 0, 0, 0.87);\n\n  $this: &;\n\n  --c-input-border-width: 1px;\n\n  align-items: flex-start;\n  display: flex;\n  flex: 1 1 auto;\n  font-family: $csc-font-family;\n  font-size: 16px;\n  letter-spacing: normal;\n  max-width: 100%;\n  text-align: left;\n  border-radius: 4px;\n\n  input,\n  select,\n  textarea {\n    margin: 0;\n    border: 0;\n    padding: 0;\n    display: inline-block;\n    vertical-align: middle;\n    white-space: normal;\n    background: none;\n    line-height: 1;\n\n    /* Browsers have different default form fonts */\n    font-size: 16px;\n    font-family: $csc-font-family;\n  }\n\n  input,\n  textarea {\n    -webkit-box-sizing: content-box;\n    -moz-box-sizing: content-box;\n    box-sizing: content-box;\n  }\n\n  input[type='checkbox'],\n  input[type='radio'],\n  select {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n\n  input[type='search'] {\n    -webkit-appearance: textfield;\n    -webkit-box-sizing: content-box;\n    box-sizing: content-box;\n  }\n\n  ::-webkit-search-decoration {\n    display: none;\n  }\n\n  textarea {\n    vertical-align: top;\n    overflow: auto;\n  }\n\n  input {\n    max-height: 32px;\n    padding: 8px 0 8px;\n  }\n\n  textarea {\n    margin-top: 4px;\n    min-height: 44px;\n    padding: 8px 12px 8px 0;\n    resize: vertical;\n  }\n\n  input,\n  textarea {\n    background-color: transparent;\n    border: none;\n    color: rgba(0, 0, 0, 0.87);\n    flex: 1 1 auto;\n    font-family: $csc-font-family;\n    font-size: 16px;\n    line-height: 20px;\n    max-width: 100%;\n    min-width: 0;\n    width: 100%;\n  }\n\n  input:focus,\n  input:active,\n  textarea:focus,\n  textarea:active {\n    outline: none;\n  }\n\n  .c-input__content {\n    align-items: center;\n    display: flex;\n    width: 100%;\n  }\n\n  &__control {\n    border-radius: inherit;\n    color: currentColor;\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    flex-wrap: wrap;\n    gap: 8px;\n    height: auto;\n    min-width: 0;\n    width: 100%;\n  }\n\n  &__slot {\n    align-items: stretch;\n    background: transparent;\n    border-radius: inherit;\n    color: inherit;\n    cursor: text;\n    display: flex;\n    min-height: 44px;\n    padding: 0 12px;\n    position: relative;\n    transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n    width: 100%;\n\n    .click-trap {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(128, 255, 0, 0.295);\n    }\n  }\n\n  &__field {\n    align-items: center;\n    display: flex;\n    flex: 1 1 auto;\n    gap: 8px;\n    position: relative;\n\n    input,\n    textarea {\n      flex: 1;\n      outline: 0;\n    }\n\n    label {\n      font-size: 16px;\n      height: 20px;\n      left: 0px;\n      letter-spacing: normal;\n      line-height: 20px;\n      max-width: 90%;\n      min-height: 8px;\n      overflow: hidden;\n      pointer-events: none;\n      position: absolute;\n      right: auto;\n      text-overflow: ellipsis;\n      top: 12px;\n      transform-origin: top left;\n      transform: translateX(var(--c-label-position)) translateY(0) scale(1);\n      transition: 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n      white-space: nowrap;\n\n      &.active {\n        transform: translateY(-18px) scale(0.75);\n      }\n\n      span {\n        color: var(--csc-error);\n      }\n    }\n  }\n\n  &--select .c-input__slot {\n    cursor: pointer;\n  }\n\n  fieldset {\n    border-collapse: collapse;\n    border-color: currentColor;\n    border-radius: inherit;\n    border-style: solid;\n    border-width: var(--c-input-border-width);\n    bottom: 0;\n    left: 0;\n    margin: 0;\n    padding-left: 8px;\n    padding: 0;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    transition-duration: 0.15s;\n    transition-property: color;\n    transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\n\n    legend {\n      float: none;\n      line-height: 11px;\n      margin-left: 7px;\n      padding: 0;\n      text-align: left;\n      transition: width 0.3s cubic-bezier(0.25, 0.8, 0.5, 1);\n      width: 0;\n\n      &.active {\n        width: var(--c-legend-width);\n      }\n    }\n  }\n\n  &--shadow {\n    #{$this} {\n      &__slot {\n        background: #fff;\n        box-shadow: rgba(0, 0, 0, 0.15) 0px 5px 15px 0px;\n\n        &:focus-within {\n          outline: 2px var(--csc-primary) solid;\n        }\n      }\n    }\n  }\n\n  &--disabled {\n    input,\n    textarea,\n    fieldset,\n    label {\n      --csc-error: rgba(0, 0, 0, 0.5);\n\n      color: rgba(0, 0, 0, 0.5);\n    }\n  }\n\n  &--textarea {\n    #{$this} {\n      &__field {\n        margin-right: -12px;\n      }\n    }\n  }\n\n  ::placeholder {\n    color: rgba(0, 0, 0, 0.46);\n    opacity: 1;\n  }\n\n  &:focus-within,\n  &:not(.c-input--disabled):active {\n    --c-input-border-width: 2px;\n    --c-color: var(--csc-primary);\n\n    color: var(--csc-primary);\n\n    label {\n      transform: translateX(0px) translateY(-18px) scale(0.75);\n    }\n\n    legend {\n      width: var(--c-legend-width);\n    }\n  }\n\n  &--error {\n    color: var(--csc-error);\n\n    &:focus-within {\n      color: var(--csc-error);\n    }\n  }\n}\n","import {\n  Component,\n  Host,\n  h,\n  State,\n  Prop,\n  Event,\n  EventEmitter,\n  Element,\n  Watch,\n} from '@stencil/core';\nimport { CAutocompleteItem, CSelectItem } from '../../types';\n\n/**\n * @parent None\n */\n@Component({\n  tag: 'c-input',\n  styleUrl: 'c-input.scss',\n  shadow: false,\n})\nexport class CInput {\n  /**\n   * Auto focus the input\n   */\n  @Prop() autofocus = false;\n\n  /**\n   * Disable the input\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Render a hidden input outside the shadow dom\n   */\n  @Prop() form = false;\n\n  /**\n   * Hide the hint and error messages\n   */\n  @Prop() hideDetails = false;\n\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Id of the input\n   */\n  @Prop({ attribute: 'id' }) hostId: string;\n\n  /**\n   * Id of the input element\n   */\n  @Prop() inputId: string;\n\n  /**\n   * Label of the input\n   */\n  @Prop() label: string;\n\n  /**\n   * Maximum value on a numeric input\n   */\n  @Prop() max: number = null;\n\n  /**\n   * Minimum value on a numeric input\n   */\n  @Prop() min: number = null;\n\n  /**\n   * Name of the input\n   */\n  @Prop() name: string;\n\n  /**\n   * Numeric input\n   *\n   * @deprecated Use type=\"number\" instead\n   */\n  @Prop() number = false;\n\n  /**\n   * Placeholder of the input\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * Mark as readonly\n   */\n  @Prop() readonly = false;\n\n  /**\n   * Set the input as required\n   */\n  @Prop() required = false;\n\n  /**\n   * Rows on the input\n   */\n  @Prop() rows = 1;\n\n  /**\n   * Shadow variant of the input\n   */\n  @Prop() shadow = false;\n\n  /**\n   * Step size on a numeric input\n   */\n  @Prop() step: number = null;\n\n  /**\n   * Type of the input\n   */\n  @Prop() type: string;\n\n  /**\n   * Set the valid√≠ty of the input\n   */\n  @Prop() valid = true;\n\n  /**\n   * Manual validation\n   */\n  @Prop() validate = false;\n\n  /**\n   * Validate the input on blur\n   */\n  @Prop() validateOnBlur = false;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  /**\n   * Value of the input\n   */\n  @Prop() value: string | number | boolean | CSelectItem | CAutocompleteItem;\n\n  /**\n   * Variant\n   */\n  @Prop() variant: 'text' | 'select' = 'text';\n\n  /**\n   * Emit changes to the parent\n   */\n  @Event({ bubbles: false }) changeValue: EventEmitter;\n\n  @State() isFocused = false;\n\n  @State() labelWidth = 0;\n\n  @State() preSlotWidth = 0;\n\n  @State() statusText = '';\n\n  @Element() hiddenEl!: HTMLCInputElement;\n\n  @Watch('valid')\n  onValidChange() {\n    if (this.validateOnBlur && !this._hasBlurred) return;\n\n    this._setAriaDescriptionId();\n  }\n\n  @Watch('validation')\n  onValidationMessageChange() {\n    this._updateStatusText();\n  }\n\n  @Watch('value')\n  onValueChange(value) {\n    if (!value) this._onReset();\n  }\n\n  @Watch('placeholder')\n  onPlaceholderChange(placeholder) {\n    if (placeholder) this._onReset();\n  }\n\n  private _hasBlurred = false;\n\n  private _labelRef: HTMLLabelElement;\n\n  private _debounce = null;\n\n  componentDidLoad() {\n    if (this.autofocus) {\n      setTimeout(() => {\n        this._onFocus(false);\n      }, 500);\n    }\n\n    this._calculateElementWidths();\n    this._setAriaDescriptionId();\n\n    if (this.label) {\n      this._observer.observe(this._labelRef);\n    }\n\n    this.inputField?.addEventListener('focus', () => this._onFocus(false));\n    this.inputField?.addEventListener('blur', () => this._onBlur());\n    this.inputField?.addEventListener(\n      'keypress',\n      this._preventNonNumericalInput,\n    );\n\n    // hide the placeholder text initially if there is a label\n    if (this.inputField) {\n      this.inputField.placeholder =\n        !!this.label || !this.placeholder ? '' : this.placeholder;\n\n      this.inputField.title = this.label ?? this.placeholder;\n    }\n  }\n\n  disconnectedCallback() {\n    this.inputField?.removeEventListener('focus', () => this._onFocus(false));\n    this.inputField?.removeEventListener('blur', () => this._onBlur());\n    this.inputField?.removeEventListener(\n      'keypress',\n      this._preventNonNumericalInput,\n    );\n\n    this._observer.disconnect();\n  }\n\n  get isActive() {\n    return !!this.value || typeof this.value === 'boolean' || this.isFocused;\n  }\n\n  private _setAriaDescriptionId() {\n    this.inputField.removeAttribute('aria-describedby');\n\n    let type = null;\n\n    if (this.valid && !this.value && this.hint) {\n      type = 'hint';\n    }\n\n    if (!this.valid) {\n      type = 'error';\n    }\n\n    if (type) {\n      this.inputField.setAttribute(\n        'aria-describedby',\n        `${type}-${this.inputId}`,\n      );\n    }\n  }\n\n  private _observer = new IntersectionObserver(\n    (entries, observer) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          this._calculateElementWidths();\n          observer.unobserve(entry.target);\n        }\n      });\n    },\n    { threshold: 1 },\n  );\n\n  private _calculateElementWidths() {\n    this.labelWidth = !!this.label ? this._labelRef.scrollWidth * 0.75 + 6 : 0;\n    this.preSlotWidth = this.inputField.offsetLeft;\n  }\n\n  private _onBlur = () => {\n    // delay the blur event to prevent the label from 'flashing' on c-select selection\n    setTimeout(() => {\n      this.isFocused = false;\n      this._hasBlurred = true;\n\n      // show the label if there's no label or value\n      this._onReset();\n    }, 100);\n  };\n\n  private _onFocus = (click = true) => {\n    if (this.disabled) return;\n\n    this.isFocused = true;\n\n    this.inputField?.focus();\n\n    if (click) this.inputField?.click();\n\n    // show the label if there's no value\n    if (this.inputField) {\n      this.inputField.placeholder =\n        !!this.value || !this.placeholder ? '' : this.placeholder;\n    }\n  };\n\n  private _onReset() {\n    if (this.inputField) {\n      this.inputField.placeholder =\n        !this.label && !this.value && !!this.placeholder\n          ? this.placeholder\n          : '';\n    }\n  }\n\n  /**\n   * Prevent non numeric values in the numeric fields\n   */\n  private _preventNonNumericalInput(event: KeyboardEvent) {\n    if (this.type !== 'number') return;\n\n    if (!event.key.match(/^[0-9,\\.]+$/)) event.preventDefault();\n  }\n\n  private _renderBorders() {\n    if (this.shadow) return;\n\n    const classes = {\n      active: this.isActive,\n    };\n\n    return (\n      <fieldset aria-hidden=\"true\">\n        <legend\n          class={classes}\n          style={{\n            '--c-legend-width': this.labelWidth + 'px',\n          }}\n        >\n          <span class=\"notranslate\"></span>\n        </legend>\n      </fieldset>\n    );\n  }\n\n  private _renderLabel() {\n    if (!this.label) return;\n\n    const classes = {\n      active: this.isActive,\n    };\n\n    return (\n      <label\n        htmlFor={this.inputId}\n        ref={(el) => (this._labelRef = el as HTMLLabelElement)}\n        class={classes}\n      >\n        {this.label}\n        {this.required && <span>&nbsp;*</span>}\n      </label>\n    );\n  }\n\n  get inputField() {\n    return this.hiddenEl?.querySelector('.c-input__input') as\n      | HTMLInputElement\n      | HTMLTextAreaElement;\n  }\n\n  private _updateStatusText() {\n    if (this._debounce !== null) {\n      clearTimeout(this._debounce);\n      this._debounce = null;\n    }\n\n    this._debounce = window.setTimeout(() => {\n      this.statusText = this.valid ? '' : `Error: ${this.validation}`;\n\n      this._debounce = null;\n    }, 1400);\n  }\n\n  render() {\n    const containerClasses = {\n      'c-input': true,\n      'c-input--disabled': this.disabled,\n      'c-input--shadow': this.shadow,\n      'c-input--textarea': this.rows > 1,\n      'c-input--error': !this.valid,\n      [`c-input--${this.variant}`]: true,\n    };\n\n    return (\n      <Host disabled={this.disabled}>\n        <div\n          id={'announce-' + this.inputId}\n          class=\"visuallyhidden\"\n          aria-live=\"polite\"\n          aria-atomic=\"true\"\n        >\n          {this.statusText}\n        </div>\n\n        <div class={containerClasses}>\n          <div class=\"c-input__control\">\n            <div class=\"c-input__slot\" onClick={() => this._onFocus()}>\n              {this._renderBorders()}\n\n              <div\n                class=\"c-input__field\"\n                style={{\n                  '--c-label-position': this.preSlotWidth + 'px',\n                }}\n              >\n                <slot name=\"pre\"></slot>\n\n                {this._renderLabel()}\n\n                <slot></slot>\n\n                <slot name=\"post\"></slot>\n              </div>\n            </div>\n\n            {!this.hideDetails && (\n              <c-message\n                hint={this.hint}\n                inputId={this.inputId}\n                valid={this.valid}\n                validation={this.validation}\n              />\n            )}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n",":host {\n  display: block;\n  line-height: 1;\n  padding: 0 12px;\n}\n\n.c-message {\n  $this: &;\n\n  &--active {\n    #{$this} {\n      &-item {\n        opacity: 1;\n        transform: translateY(0px);\n      }\n    }\n  }\n\n  &-item {\n    font-size: 12px;\n    min-height: 16px;\n    opacity: 0;\n    transform: translateY(-4px);\n    transition: all 0.2s cubic-bezier(0.25, 0.8, 0.5, 1);\n\n    &--hint {\n      color: var(--csc-mid-grey);\n    }\n\n    &--error {\n      color: var(--csc-error);\n    }\n\n    span {\n      align-items: flex-start;\n      color: currentColor;\n      display: flex;\n      gap: 4px;\n      min-height: 16px;\n    }\n\n    svg {\n      fill: currentColor;\n      height: 16px;\n      width: 16px;\n      position: relative;\n      top: -2px;\n    }\n  }\n\n  .visuallyhidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  }\n}\n","import { mdiCloseCircle } from '@mdi/js';\nimport { Component, Host, Prop, State, Watch, h } from '@stencil/core';\n\n/**\n * @parent None\n */\n@Component({\n  tag: 'c-message',\n  styleUrl: 'c-message.scss',\n  shadow: true,\n})\nexport class CMessage {\n  /**\n   * Hint text for the input\n   */\n  @Prop() hint = '';\n\n  /**\n   * Id of the related input element\n   */\n  @Prop() inputId: string;\n\n  /**\n   * Parent valid√≠ty\n   */\n  @Prop() valid = true;\n\n  /**\n   * Custom validation message\n   */\n  @Prop() validation = 'Required field';\n\n  @State() messageOptions = {\n    show: true,\n    type: 'hint',\n    content: '',\n  };\n\n  @Watch('valid')\n  onValidChange(valid: boolean) {\n    // if (this.validateOnBlur && !this._hasBlurred) return;\n\n    this._handleValidation(valid);\n  }\n\n  @Watch('validation')\n  onValidationMessageChange(message: string) {\n    if (this.valid || !message) return;\n\n    this.messageOptions = {\n      ...this.messageOptions,\n      content: (\n        <span>\n          <span class=\"visuallyhidden\">Error: </span>\n          {this._validationIcon} {message}\n        </span>\n      ),\n    };\n  }\n\n  @Watch('hint')\n  onHintMessageChange(message: string) {\n    if (!this.valid || !message) return;\n\n    this.messageOptions = {\n      ...this.messageOptions,\n      content: (\n        <span>\n          <span class=\"visuallyhidden\">Hint: </span>\n          {message}\n        </span>\n      ),\n    };\n  }\n\n  private _handleValidation(valid: boolean, timeout = 200) {\n    this.messageOptions = {\n      ...this.messageOptions,\n      show: false,\n    };\n\n    setTimeout(() => {\n      this.messageOptions = {\n        ...this.messageOptions,\n        type: valid ? 'hint' : 'error',\n        show: true,\n        content: valid ? (\n          <span id={`hint-${this.inputId}`}>\n            <span class=\"visuallyhidden\">Hint: </span>\n            {this.hint}\n          </span>\n        ) : (\n          <span id={`error-${this.inputId}`}>\n            {this._validationIcon}\n            <span class=\"visuallyhidden\">Error: </span>\n            {this.validation}\n          </span>\n        ),\n      };\n    }, timeout);\n  }\n\n  private _validationIcon = (\n    <svg height=\"16px\" width=\"16px\" viewBox=\"0 0 24 24\">\n      <path d={mdiCloseCircle} />\n    </svg>\n  );\n\n  componentDidLoad() {\n    this._handleValidation(this.valid, 0);\n  }\n\n  render() {\n    const classes = {\n      'c-message': true,\n      'c-message--active': this.messageOptions.show,\n    };\n\n    const messageClasses = {\n      'c-message-item': true,\n      [`c-message-item--${this.messageOptions.type}`]: true,\n    };\n\n    return (\n      <Host>\n        <div class={classes}>\n          <div class={messageClasses}>{this.messageOptions.content}</div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"oGAAA,MAAMA,EAAY,gmO,MCqBLC,EAAM,M,kEAqKTC,KAAAC,YAAc,MAIdD,KAAAE,UAAY,KAoEZF,KAAAG,UAAY,IAAIC,sBACtB,CAACC,EAASC,KACRD,EAAQE,SAASC,IACf,GAAIA,EAAMC,eAAgB,CACxBT,KAAKU,0BACLJ,EAASK,UAAUH,EAAMI,O,IAE3B,GAEJ,CAAEC,UAAW,IAQPb,KAAAc,QAAU,KAEhBC,YAAW,KACTf,KAAKgB,UAAY,MACjBhB,KAAKC,YAAc,KAGnBD,KAAKiB,UAAU,GACd,IAAI,EAGDjB,KAAAkB,SAAW,CAACC,EAAQ,Q,QAC1B,GAAInB,KAAKoB,SAAU,OAEnBpB,KAAKgB,UAAY,MAEjBK,EAAArB,KAAKsB,cAAU,MAAAD,SAAA,SAAAA,EAAEE,QAEjB,GAAIJ,GAAOK,EAAAxB,KAAKsB,cAAU,MAAAE,SAAA,SAAAA,EAAEL,QAG5B,GAAInB,KAAKsB,WAAY,CACnBtB,KAAKsB,WAAWG,cACZzB,KAAK0B,QAAU1B,KAAKyB,YAAc,GAAKzB,KAAKyB,W,kBAjRhC,M,cAKD,M,UAKJ,M,iBAKO,M,UAKP,G,2EAoBO,K,SAKA,K,gCAYL,M,yCAUE,M,cAKA,M,UAKJ,E,YAKE,M,UAKM,K,+BAUP,K,cAKG,M,oBAKM,M,gBAKJ,iB,kCAUgB,O,eAOhB,M,gBAEC,E,kBAEE,E,gBAEF,E,CAKtBE,gBACE,GAAI3B,KAAK4B,iBAAmB5B,KAAKC,YAAa,OAE9CD,KAAK6B,uB,CAIPC,4BACE9B,KAAK+B,mB,CAIPC,cAAcN,GACZ,IAAKA,EAAO1B,KAAKiB,U,CAInBgB,oBAAoBR,GAClB,GAAIA,EAAazB,KAAKiB,U,CASxBiB,mB,YACE,GAAIlC,KAAKmC,UAAW,CAClBpB,YAAW,KACTf,KAAKkB,SAAS,MAAM,GACnB,I,CAGLlB,KAAKU,0BACLV,KAAK6B,wBAEL,GAAI7B,KAAKoC,MAAO,CACdpC,KAAKG,UAAUkC,QAAQrC,KAAKsC,U,EAG9BjB,EAAArB,KAAKsB,cAAU,MAAAD,SAAA,SAAAA,EAAEkB,iBAAiB,SAAS,IAAMvC,KAAKkB,SAAS,UAC/DM,EAAAxB,KAAKsB,cAAU,MAAAE,SAAA,SAAAA,EAAEe,iBAAiB,QAAQ,IAAMvC,KAAKc,aACrD0B,EAAAxC,KAAKsB,cAAU,MAAAkB,SAAA,SAAAA,EAAED,iBACf,WACAvC,KAAKyC,2BAIP,GAAIzC,KAAKsB,WAAY,CACnBtB,KAAKsB,WAAWG,cACZzB,KAAKoC,QAAUpC,KAAKyB,YAAc,GAAKzB,KAAKyB,YAEhDzB,KAAKsB,WAAWoB,OAAQC,EAAA3C,KAAKoC,SAAK,MAAAO,SAAA,EAAAA,EAAI3C,KAAKyB,W,EAI/CmB,uB,WACEvB,EAAArB,KAAKsB,cAAU,MAAAD,SAAA,SAAAA,EAAEwB,oBAAoB,SAAS,IAAM7C,KAAKkB,SAAS,UAClEM,EAAAxB,KAAKsB,cAAU,MAAAE,SAAA,SAAAA,EAAEqB,oBAAoB,QAAQ,IAAM7C,KAAKc,aACxD0B,EAAAxC,KAAKsB,cAAU,MAAAkB,SAAA,SAAAA,EAAEK,oBACf,WACA7C,KAAKyC,2BAGPzC,KAAKG,UAAU2C,Y,CAGbC,eACF,QAAS/C,KAAK0B,cAAgB1B,KAAK0B,QAAU,WAAa1B,KAAKgB,S,CAGzDa,wBACN7B,KAAKsB,WAAW0B,gBAAgB,oBAEhC,IAAIC,EAAO,KAEX,GAAIjD,KAAKkD,QAAUlD,KAAK0B,OAAS1B,KAAKmD,KAAM,CAC1CF,EAAO,M,CAGT,IAAKjD,KAAKkD,MAAO,CACfD,EAAO,O,CAGT,GAAIA,EAAM,CACRjD,KAAKsB,WAAW8B,aACd,mBACA,GAAGH,KAAQjD,KAAKqD,U,EAiBd3C,0BACNV,KAAKsD,aAAetD,KAAKoC,MAAQpC,KAAKsC,UAAUiB,YAAc,IAAO,EAAI,EACzEvD,KAAKwD,aAAexD,KAAKsB,WAAWmC,U,CA8B9BxC,WACN,GAAIjB,KAAKsB,WAAY,CACnBtB,KAAKsB,WAAWG,aACbzB,KAAKoC,QAAUpC,KAAK0B,SAAW1B,KAAKyB,YACjCzB,KAAKyB,YACL,E,EAOFgB,0BAA0BiB,GAChC,GAAI1D,KAAKiD,OAAS,SAAU,OAE5B,IAAKS,EAAMC,IAAIC,MAAM,eAAgBF,EAAMG,gB,CAGrCC,iBACN,GAAI9D,KAAK+D,OAAQ,OAEjB,MAAMC,EAAU,CACdC,OAAQjE,KAAK+C,UAGf,OACEmB,EAAA,0BAAsB,QACpBA,EAAA,UACEC,MAAOH,EACPI,MAAO,CACL,mBAAoBpE,KAAKsD,WAAa,OAGxCY,EAAA,QAAMC,MAAM,iB,CAMZE,eACN,IAAKrE,KAAKoC,MAAO,OAEjB,MAAM4B,EAAU,CACdC,OAAQjE,KAAK+C,UAGf,OACEmB,EAAA,SACEI,QAAStE,KAAKqD,QACdkB,IAAMC,GAAQxE,KAAKsC,UAAYkC,EAC/BL,MAAOH,GAENhE,KAAKoC,MACLpC,KAAKyE,UAAYP,EAAA,kB,CAKpB5C,iB,MACF,OAAOD,EAAArB,KAAK0E,YAAQ,MAAArD,SAAA,SAAAA,EAAEsD,cAAc,kB,CAK9B5C,oBACN,GAAI/B,KAAKE,YAAc,KAAM,CAC3B0E,aAAa5E,KAAKE,WAClBF,KAAKE,UAAY,I,CAGnBF,KAAKE,UAAY2E,OAAO9D,YAAW,KACjCf,KAAK8E,WAAa9E,KAAKkD,MAAQ,GAAK,UAAUlD,KAAK+E,aAEnD/E,KAAKE,UAAY,IAAI,GACpB,K,CAGL8E,SACE,MAAMC,EAAmB,CACvB,UAAW,KACX,oBAAqBjF,KAAKoB,SAC1B,kBAAmBpB,KAAK+D,OACxB,oBAAqB/D,KAAKkF,KAAO,EACjC,kBAAmBlF,KAAKkD,MACxB,CAAC,YAAYlD,KAAKmF,WAAY,MAGhC,OACEjB,EAACkB,EAAI,CAAChE,SAAUpB,KAAKoB,UACnB8C,EAAA,OACEmB,GAAI,YAAcrF,KAAKqD,QACvBc,MAAM,iBAAgB,YACZ,SAAQ,cACN,QAEXnE,KAAK8E,YAGRZ,EAAA,OAAKC,MAAOc,GACVf,EAAA,OAAKC,MAAM,oBACTD,EAAA,OAAKC,MAAM,gBAAgBmB,QAAS,IAAMtF,KAAKkB,YAC5ClB,KAAK8D,iBAENI,EAAA,OACEC,MAAM,iBACNC,MAAO,CACL,qBAAsBpE,KAAKwD,aAAe,OAG5CU,EAAA,QAAMqB,KAAK,QAEVvF,KAAKqE,eAENH,EAAA,aAEAA,EAAA,QAAMqB,KAAK,YAIbvF,KAAKwF,aACLtB,EAAA,aACEf,KAAMnD,KAAKmD,KACXE,QAASrD,KAAKqD,QACdH,MAAOlD,KAAKkD,MACZ6B,WAAY/E,KAAK+E,e,sMC1ajC,MAAMU,EAAc,i6G,MCWPC,EAAQ,M,yBA2FX1F,KAAA2F,gBACNzB,EAAA,OAAK0B,OAAO,OAAOC,MAAM,OAAOC,QAAQ,aACtC5B,EAAA,QAAM6B,EAAGC,K,UAzFE,G,kCAUC,K,gBAKK,iB,oBAEK,CACxBC,KAAM,KACNhD,KAAM,OACNiD,QAAS,G,CAIXvE,cAAcuB,GAGZlD,KAAKmG,kBAAkBjD,E,CAIzBpB,0BAA0BsE,GACxB,GAAIpG,KAAKkD,QAAUkD,EAAS,OAE5BpG,KAAKqG,eAAcC,OAAAC,OAAAD,OAAAC,OAAA,GACdvG,KAAKqG,gBAAc,CACtBH,QACEhC,EAAA,YACEA,EAAA,QAAMC,MAAM,kBAAgB,WAC3BnE,KAAK2F,gBAAe,IAAGS,I,CAOhCI,oBAAoBJ,GAClB,IAAKpG,KAAKkD,QAAUkD,EAAS,OAE7BpG,KAAKqG,eAAcC,OAAAC,OAAAD,OAAAC,OAAA,GACdvG,KAAKqG,gBAAc,CACtBH,QACEhC,EAAA,YACEA,EAAA,QAAMC,MAAM,kBAAgB,UAC3BiC,I,CAMDD,kBAAkBjD,EAAgBuD,EAAU,KAClDzG,KAAKqG,eAAcC,OAAAC,OAAAD,OAAAC,OAAA,GACdvG,KAAKqG,gBAAc,CACtBJ,KAAM,QAGRlF,YAAW,KACTf,KAAKqG,eAAcC,OAAAC,OAAAD,OAAAC,OAAA,GACdvG,KAAKqG,gBAAc,CACtBpD,KAAMC,EAAQ,OAAS,QACvB+C,KAAM,KACNC,QAAShD,EACPgB,EAAA,QAAMmB,GAAI,QAAQrF,KAAKqD,WACrBa,EAAA,QAAMC,MAAM,kBAAgB,UAC3BnE,KAAKmD,MAGRe,EAAA,QAAMmB,GAAI,SAASrF,KAAKqD,WACrBrD,KAAK2F,gBACNzB,EAAA,QAAMC,MAAM,kBAAgB,WAC3BnE,KAAK+E,aAGX,GACA0B,E,CASLvE,mBACElC,KAAKmG,kBAAkBnG,KAAKkD,MAAO,E,CAGrC8B,SACE,MAAMhB,EAAU,CACd,YAAa,KACb,oBAAqBhE,KAAKqG,eAAeJ,MAG3C,MAAMS,EAAiB,CACrB,iBAAkB,KAClB,CAAC,mBAAmB1G,KAAKqG,eAAepD,QAAS,MAGnD,OACEiB,EAACkB,EAAI,KACHlB,EAAA,OAAKC,MAAOH,GACVE,EAAA,OAAKC,MAAOuC,GAAiB1G,KAAKqG,eAAeH,U"}
